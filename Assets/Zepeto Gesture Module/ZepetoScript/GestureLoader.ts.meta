fileFormatVersion: 2
guid: 956de2558fee74a0fa08a9adb2f63a37
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    ZEPETO_Character_Controller_1 = require(\"ZEPETO.Character.Controller\");\r\nconst
    ZEPETO_World_1 = require(\"ZEPETO.World\");\r\nconst UnityEngine_UI_1 = require(\"UnityEngine.UI\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\nconst Thumbnail_1 = require(\"./Thumbnail\");\r\nclass
    GestureLoader extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor()
    {\r\n        super(...arguments);\r\n        this.contents = [];\r\n        this.thumbnails
    = [];\r\n        this._loadContentsCount = 100;\r\n        this._tick = 0.04;\r\n   
    }\r\n    Start() {\r\n        ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedLocalPlayer.AddListener(()
    => {\r\n            this._myCharacter = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.zepetoPlayer.character;\r\n           
    // In order to take a thumbnail with my character, You need to request the content
    after the character is created.\r\n            this.ContentRequest();\r\n           
    UnityEngine_1.Object.FindObjectOfType($typeof(ZEPETO_Character_Controller_1.ZepetoScreenTouchpad)).OnPointerDownEvent.AddListener(()
    => {\r\n                this.StopGesture();\r\n            });\r\n           
    // If click the close button, cancel the gesture\r\n            this._closeButton.onClick.AddListener(()
    => {\r\n                this.StopGesture();\r\n            });\r\n        });\r\n   
    }\r\n    // 1. Receive content from the server\r\n    ContentRequest() {\r\n       
    // All Type Request\r\n        ZEPETO_World_1.ZepetoWorldContent.RequestOfficialContentList(ZEPETO_World_1.OfficialContentType.All,
    contents => {\r\n            this.contents = contents;\r\n            for (let
    i = 0; i < this._loadContentsCount; i++) {\r\n                if (!this.contents[i].IsDownloadedThumbnail)
    {\r\n                    // Take a thumbnail photo using my character\r\n                   
    this.contents[i].DownloadThumbnail(this._myCharacter, () => {\r\n                       
    this.CreateThumbnailObjcet(this.contents[i]);\r\n                    });\r\n               
    }\r\n                else {\r\n                    this.CreateThumbnailObjcet(this.contents[i]);\r\n               
    }\r\n            }\r\n        });\r\n    }\r\n    // 2. Creating Thumbnail Objects\r\n   
    CreateThumbnailObjcet(content) {\r\n        const newThumb = UnityEngine_1.GameObject.Instantiate(this._prefThumb,
    this._contentsParent);\r\n        newThumb.GetComponent($typeof(Thumbnail_1.default)).content
    = content;\r\n        // Button Listener for each thumbnail\r\n        newThumb.GetComponent($typeof(UnityEngine_UI_1.Button)).onClick.AddListener(()
    => {\r\n            this.LoadAnimation(content);\r\n        });\r\n        this.thumbnails.push(newThumb);\r\n   
    }\r\n    // 3. Loading Animation\r\n    LoadAnimation(content) {\r\n        //
    Verify animation load\r\n        if (!content.IsDownloadedAnimation) {\r\n           
    // If the animation has not been downloaded, download it.\r\n            content.DownloadAnimation(()
    => {\r\n                // play animation clip\r\n                this.runAnimation(content.AnimationClip);\r\n           
    });\r\n        }\r\n        else {\r\n            this.runAnimation(content.AnimationClip);\r\n       
    }\r\n    }\r\n    // A function to run an animation, \r\n    runAnimation(animation)
    {\r\n        if (animation !== null) {\r\n            this.animation = animation;\r\n       
    }\r\n        if (this._loopingAnimation === true) {\r\n            this.StartCoroutine(this.setGest(this._tick,
    this.animation));\r\n        }\r\n        else {\r\n            this._myCharacter.SetGesture(this.animation);\r\n       
    }\r\n    }\r\n    StopGesture() {\r\n        this.StopAllCoroutines();\r\n       
    this._myCharacter.CancelGesture();\r\n    }\r\n    *setGest(tick, animation =
    null) {\r\n        console.log(\"Started the looop\");\r\n        //while (this._myCharacter.CurrentState
    !== CharacterState.Gesture) {yield null;}\r\n        while (this._myCharacter.CurrentState
    == ZEPETO_Character_Controller_1.CharacterState.Idle || this._myCharacter.CurrentState
    == ZEPETO_Character_Controller_1.CharacterState.Invalid) {\r\n            console.log(\"CURRENTLY
    LOOPING\");\r\n            this._myCharacter.SetGesture(animation);\r\n       
    }\r\n        yield new UnityEngine_1.WaitForSeconds(tick);\r\n    }\r\n}\r\nexports.default
    = GestureLoader;\r\n/*\r\nNeed to add a logic so that the code will be able to
    get the state of loop and rerun the loop if needed\r\n*/ \r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2VzdHVyZUxvYWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkdlc3R1cmVMb2FkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBc0Q7QUFDdEQsNkVBQTBJO0FBQzFJLCtDQUE4RjtBQUM5RixtREFBd0Q7QUFDeEQsNkNBQXNHO0FBQ3RHLDJDQUFvQztBQUVwQyxNQUFxQixhQUFjLFNBQVEscUNBQXFCO0lBQWhFOztRQUc4QixhQUFRLEdBQWMsRUFBRSxDQUFDO1FBQ3pCLGVBQVUsR0FBaUIsRUFBRSxDQUFDO1FBRTlCLHVCQUFrQixHQUFXLEdBQUcsQ0FBQztRQU0xQyxVQUFLLEdBQVcsSUFBSSxDQUFDO0lBMkcxQyxDQUFDO0lBeEdHLEtBQUs7UUFDRCwyQ0FBYSxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFO1lBQ3ZELElBQUksQ0FBQyxZQUFZLEdBQUcsMkNBQWEsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUM7WUFFOUUsa0hBQWtIO1lBQ2xILElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUV0QixvQkFBTSxDQUFDLGdCQUFnQixTQUFDLGtEQUFvQixHQUFJLGtCQUFrQixDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUU7Z0JBQ2hGLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUN2QixDQUFDLENBQUMsQ0FBQztZQUVILGdEQUFnRDtZQUNoRCxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFO2dCQUN2QyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDdkIsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFHRCxxQ0FBcUM7SUFDN0IsY0FBYztRQUNsQixtQkFBbUI7UUFDbkIsaUNBQWtCLENBQUMsMEJBQTBCLENBQUMsa0NBQW1CLENBQUMsR0FBRyxFQUFFLFFB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","assetPath":"Assets/Zepeto
    Gesture Module/ZepetoScript/GestureLoader.ts","manifest":{"properties":[{"assembly":"UnityEngine.UI","name":"_closeButton","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World","name":"contents","type":"ZEPETO.World.Content[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"thumbnails","type":"UnityEngine.GameObject[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"mscorlib","name":"_loadContentsCount","type":"System.Single","isArray":false,"initValue":["100"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"_contentsParent","type":"UnityEngine.Transform","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"_prefThumb","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"mscorlib","name":"_loopingAnimation","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]}],"name":"GestureLoader","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: fdab216c4f30ca93f73efc6d84e69295
  onlyWriteTrigger: 0
